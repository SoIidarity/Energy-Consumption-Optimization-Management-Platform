---
swagger: "2.0"
info:
  description: "Main API used for the ECOMP Project. All agrigated endpoint data is\
    \ retrevied from this API."
  version: "1.0.0"
  title: "Energy Consumption Optimization Mapagement Platform"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v2"
tags:
- name: "geojson"
  description: "Map spesific information,imbedded within a geojson containing information\
    \ for each building"
- name: "campus & building"
  description: "Campus and building information for main page"
schemes:
- "https"
- "http"
paths:
  /geojson/{campusId}:
    get:
      tags:
      - "geojson"
      summary: "Find campus geojson by ID"
      description: "Returns a single campus geojson"
      operationId: "get_geo_json_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "campusId"
        in: "path"
        description: "ID of campus to return geojson for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/geojson"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
      x-swagger-router-controller: "swagger_server.controllers.geojson_controller"
  /getAllCampus:
    get:
      tags:
        - "campus & building"
      summary: "Return information on all campus"
      description: "Key information for each campus"
      operationId: "get_campus_information"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Campus"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
      x-swagger-router-controller: "swagger_server.controllers.geojson_controller"
  /buildingInformation/{buildingId}:
    get:
      tags:
      - "campus & building"
      summary: "Find building by id"
      description: "Returns a single campus geojson"
      operationId: "get_building_info_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "buildingId"
        in: "path"
        description: "ID of campus to return geojson for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/buildingInformation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
      x-swagger-router-controller: "swagger_server.controllers.geojson_controller"
    
definitions:
  buildingInformation:
    type: "object"
    properties:
      BuildingName:
        type: "string"
        example: "Chamber of mines"
      numberOfStudentsAvg:
        type: "number"
        example: "1000"
      numberOfSensors:
        type: "number"
        example: 42
      # averageWeek:
      #   type:
  Campus:
    type: "array"
    items:
      type: "object"
      properties:
        name:
          type: "string"
          example: "Main campus"
        center:
          type: "array"
          items:
            type: "number"
            example: 28.0240,
                    -26.18701
        numberOfStudents:
          type: "number"
        totalCampusConsumption:
          type: "number"
        totalSensors:
          type: "number"
  Feature:
    type: "object"
    properties:
      type:
        type: "string"
        example: "Feature"
      properties:
        type: "object"
        properties: {}
      geometry:
        $ref: "#/definitions/Feature_geometry"
    example:
      geometry:
        coordinates:
        - - ""
          - ""
        - - ""
          - ""
        type: "Polygon"
      type: "Feature"
      properties: "{}"
  geojson:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        example: "FeatureCollection"
      features:
        type: "array"
        items:
          $ref: "#/definitions/Feature"
    example:
      features:
      - geometry:
          coordinates:
          - - ""
            - ""
          - - ""
            - ""
          type: "Polygon"
        type: "Feature"
        properties: "{}"
      - geometry:
          coordinates:
          - - ""
            - ""
          - - ""
            - ""
          type: "Polygon"
        type: "Feature"
        properties: "{}"
      id: 0
      type: "FeatureCollection"
  Feature_geometry:
    properties:
      type:
        type: "string"
        example: "Polygon"
      coordinates:
        type: "array"
        items:
          type: "array"
          items:
            type: "number"
            example: ""
    example:
      coordinates:
      - - ""
        - ""
      - - ""
        - ""
      type: "Polygon"