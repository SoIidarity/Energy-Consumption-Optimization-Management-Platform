# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.feature import Feature  # noqa: F401,E501
from swagger_server import util


class Geojson(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, type: str=None, features: List[Feature]=None):  # noqa: E501
        """Geojson - a model defined in Swagger

        :param id: The id of this Geojson.  # noqa: E501
        :type id: int
        :param type: The type of this Geojson.  # noqa: E501
        :type type: str
        :param features: The features of this Geojson.  # noqa: E501
        :type features: List[Feature]
        """
        self.swagger_types = {
            'id': int,
            'type': str,
            'features': List[Feature]
        }

        self.attribute_map = {
            'id': 'id',
            'type': 'type',
            'features': 'features'
        }

        self._id = id
        self._type = type
        self._features = features

    @classmethod
    def from_dict(cls, dikt) -> 'Geojson':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The geojson of this Geojson.  # noqa: E501
        :rtype: Geojson
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Geojson.


        :return: The id of this Geojson.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Geojson.


        :param id: The id of this Geojson.
        :type id: int
        """

        self._id = id

    @property
    def type(self) -> str:
        """Gets the type of this Geojson.


        :return: The type of this Geojson.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Geojson.


        :param type: The type of this Geojson.
        :type type: str
        """

        self._type = type

    @property
    def features(self) -> List[Feature]:
        """Gets the features of this Geojson.


        :return: The features of this Geojson.
        :rtype: List[Feature]
        """
        return self._features

    @features.setter
    def features(self, features: List[Feature]):
        """Sets the features of this Geojson.


        :param features: The features of this Geojson.
        :type features: List[Feature]
        """

        self._features = features
